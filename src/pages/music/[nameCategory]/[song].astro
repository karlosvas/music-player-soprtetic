---
import Layout from "@/layouts/Layout.astro";
import { getAllCategories, getSongsByCategory } from "@/db/db";
import type { Category, Song } from "@/types/types";

// Categorías de canciones
let Folders: Array<Category> = [];
// Cargar las categorías
try {
  Folders = getAllCategories();
} catch (error) {
  console.error("Error al cargar las categorías:", error);
  throw new Error("No se pudieron cargar las categorías de música");
}

export async function getStaticPaths() {
  const Folders = getAllCategories();
  // Para cada categoría, obtenemos sus canciones
  const paths = [];
  for (const nameCategory of Folders) {
    const mp3Files: Array<Song> = getSongsByCategory(nameCategory.name);
    for (const song of mp3Files) {
      paths.push({ params: { nameCategory: nameCategory.name, song: song.title } });
    }
  }
  return paths;
}

const { nameCategory, song } = Astro.params;
const mp3Files: Array<Song> = getSongsByCategory(nameCategory);
const actualSong: Song | null = mp3Files.find((s: Song) => s.title === song) || null;
const actualIndex: number = mp3Files.findIndex((s: Song) => s.title === song);

// Cada una de las publicaciones de la carpeta, nombre de la cancion
if (song === undefined) {
  console.error("No se ha proporcionado un ID al cargar la ruta de astro");
  throw Astro.redirect("/404");
}

if (nameCategory === undefined) {
  console.error("No se ha proporcionado un nombre de categoria al cargar la ruta de astro");
  throw Astro.redirect("/404");
}

const nornamlizedSong = actualSong?.title.toLowerCase().replace(/\s+/g, "-") + ".mp3";
---

<Layout title={actualSong?.title ?? ""}>
  <main id="main-content" data-title={actualSong?.title ?? ""}>
    <div class="container">
      <div class="music-player">
        <!-- Navegar entre canciones -->
        <nav>
          <a href={"/music/" + nameCategory}>
            <div class="circle">
              <i class="fa-solid fa-angle-left"></i>
            </div>
          </a>
          <div class="circle">
            <i class="fa-solid fa-bars"></i>
          </div>
        </nav>
        <!-- Imagen de la canción -->
        <img src={"/photo/hasta-luego.png"} class="song-img" />
        <!-- Título -->
        <h1 id="title">{actualSong?.title}</h1>
        <!-- Letra de la canción -->
        <p id="lyrics" class="">{actualSong?.transcript || ""}</p>
        <!-- Reproductor de música -->
        <audio id="song">
          <source src={"/music/" + nornamlizedSong} type="audio/mpeg" />
        </audio>
        <!-- Barra de progreso -->
        <input type="range" id="progress" value="0" min="0" step="0.01" />
        <!-- Navegar entre canciones -->
        <div class="controls">
          <!-- Si la cancion enterior es la primera, se redirige a la ultima si no la anterior -->
          <a
            href={"/music/" +
              nameCategory +
              "/" +
              mp3Files[(actualIndex - 1 + mp3Files.length) % mp3Files.length].title}
          >
            <div><i class="fa-solid fa-backward"></i></div>
          </a>
          <div><i class="fa-solid fa-play" id="ctrlIcon"></i></div>
          <!-- Ir hacia delante si es la ultima vuelve al principio -->
          <a href={"/music/" + nameCategory + "/" + mp3Files[(actualIndex + 1) % mp3Files.length].title}>
            <div><i class="fa-solid fa-forward"></i></div>
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script src="@/scripts/client/audio-player"></script>
<script>
  import { drawLyrics } from "@/scripts/client/lyrics";
  import { transcribeFile } from "@/scripts/client/deepgram";

  // Obtenemos el titulo, y el párrafo de la letra
  const lyricsParagraph = document.getElementById("lyrics") as HTMLParagraphElement | null;
  const main = document.getElementById("main-content");
  const title: string | null | undefined = main?.getAttribute("data-title");

  async function chargeLyrics() {
    if (lyricsParagraph === null) {
      console.error("No se encuentra el elemento con id 'lyrics'");
    } else if (!title) {
      console.error("No se pudo obtener el título de la canción, para la letra");
    } else if (lyricsParagraph.innerHTML === "") {
      try {
        const lyrics: string = await transcribeFile(title);
        drawLyrics(lyrics);
      } catch (error) {
        console.error("Error al cargar la letra de la canción:", error);
        lyricsParagraph.innerHTML = "No se pudo cargar la letra de la canción.";
      }
    }
  }

  // Ejecutamos la función para cargar la letra de la canción al cargar la página
  window.addEventListener("DOMContentLoaded", () => chargeLyrics());
</script>

<style>
  :root {
    --primary-color: #174562;
    --secondary-color: #ddd;
    --background-color: #8ac6e9;
    --text-color: #222;
  }

  #lyrics {
    border-radius: 1px;
    color: var(--secondary-color);
    height: 100px;
    font-size: 20px;
    line-height: 1.5;
    color: #333;
    font-family: "Circular Std", Arial, sans-serif;
    overflow-y: auto;
    white-space: pre-line;
  }

  #lyrics .hilight {
    /* color: red; */
  }

  .container {
    overflow: hidden;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
  }

  .music-player {
    border-radius: 10px;
    background-color: var(--background-color);
    width: 500px;
    height: 80vh;
    padding: 25px 35px;
    text-align: center;
    box-shadow: 0 10px 60px var(--box-shadow-color);
  }

  nav {
    display: flex;
    justify-content: space-between;
    margin-bottom: 30px;
  }

  nav .circle {
    border-radius: 50px;
    width: 40px;
    height: 40px;
    line-height: 40px;
    background-color: var(--secondary-color);
    color: var(--primary-color);
    box-shadow: 0 5px 10px var(--box-shadow-color);
  }

  .song-img {
    background: var(--secondary-color);
    overflow: hidden;
    width: 290px;
    height: 300px;
    border-radius: 50%;
    border: 8px solid var(--secondary-color);
    box-shadow: 0 10px 60px var(--box-shadow-color);
    object-fit: cover;
  }

  .music-player h1 {
    color: var(--text-color);
    margin-top: 20px;
  }

  #progress {
    width: 100%;
    height: 6px;
    background: var(--primary-color);
    border-radius: 4px;
    cursor: pointer;
    margin: 40px 0;
    outline: none;
  }

  #progress::-webkit-slider-thumb,
  #progress::-moz-range-thumb {
    -webkit-appearance: none;
    appearance: none;
    background: var(--primary-color);
    width: 15px;
    height: 15px;
    border-radius: 50%;
    border: 8px solid var(--secondary-color);
    box-shadow: 0 5px 5px var(--box-shadow-color);
  }

  .controls {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .controls div {
    width: 60px;
    height: 60px;
    margin-left: 20px;
    margin-right: 20px;
    background: var(--secondary-color);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    color: var(--primary-color);
    box-shadow: 0 10px 20px var(--box-shadow-color);
    cursor: pointer;
  }

  .controls div:nth-child(2) {
    transform: scale(1.5);
    background: var(--primary-color);
    color: var(--secondary-color);
  }

  @media only screen and (max-width: 768px) {
    .music-player {
      width: 500px;
      height: 100vh;
    }

    nav {
      margin-bottom: 0px;
    }
  }
</style>
